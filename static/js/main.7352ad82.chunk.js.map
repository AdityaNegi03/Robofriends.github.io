{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchchange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onsearchchange","event","setState","target","value","state","fetch","then","response","json","users","filter","this","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAaeA,EAVJ,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GAExB,OACC,sBAAKC,UAAU,uDAAuDD,GAAG,MAAzE,UACC,qBAAKE,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,6BAAKF,IACL,4BAAIC,QCcQK,EAnBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAEhB,OAAO,8BAEHA,EAAOC,KAAI,SAACC,EAAKC,GACrB,OACA,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKSC,EAdC,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAC7B,OACK,qBAAKV,UAAU,MAAf,SACA,uBACAA,UAAW,mCACXW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCADI,EAPF,SAACC,GACX,OACC,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAQ,oBAAoBC,OAAO,SAAnE,SACCJ,EAAMK,YC6CIC,G,wDA5Cd,aAAc,IAAD,8BACZ,gBAYDC,eAAe,SAACC,GACf,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAZzC,EAAKC,MAAM,CACZvB,OAAO,GACPK,YAAY,IAJC,E,qDAQZ,WAAqB,IAAD,OAClBmB,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKR,SAAS,CAAEpB,OAAQ4B,S,oBAM7C,WAAS,IAAD,OACDC,EAASC,KAAKP,MAAMvB,OAAO6B,QAAO,SAAA7B,GACvC,OAAOA,EAAOP,KAAKsC,cAAcC,SAAS,EAAKT,MAAMlB,YAAY0B,kBAElE,OAA8B,IAA3BD,KAAKP,MAAMvB,OAAOiC,OAEnB,gCACA,oBAAIrC,UAAU,QAAd,0BACA,cAAC,EAAD,UACA,oBAAIA,UAAU,QAAd,6BAOA,sBAAKA,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAWlB,OAAQ6B,a,GAtCLK,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7352ad82.chunk.js","sourcesContent":["import React from 'react';\r\n// eslint-disable-next-line\r\nimport styler from './styler.css'\r\nconst Card=({name, email,id})=>{\r\n\t\r\n\treturn(\r\n\t\t<div className='tc bg-light-green br3 pd3 ma2 grow dib shadow-5 bw2 ' id='iop'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n\t\t\t<h2>{name}</h2>\r\n\t\t\t<p>{email}</p>\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default Card;","import React from 'react';\r\n\r\nimport Card from './Card';\r\n\r\nconst CardList=({robots})=>{\r\n\r\n\treturn(<div>\r\n    {\r\n    \trobots.map((user,i)=>{\r\n\treturn (\r\n\t<Card \r\n\tkey={i} \r\n\tid={robots[i].id}\r\n\tname={robots[i].name} \r\n\temail={robots[i].email} \r\n\t/>)\r\n})\r\n    }\r\n  \r\n    </div>\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox=({searchfield,searchchange})=>{\r\n\treturn(\r\n      <div className='pa2'>\r\n      <input \r\n      className ='pa2 ba b--green bg-lightest-blue' \r\n      type='search' \r\n      placeholder='search robots'\r\n      onChange={searchchange}\r\n      />\r\n      </div>\r\n       \r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n   return(\r\n   \t<div style={{overflowY:'Scroll',border: '3px solid #0ccac4',height:'800px'}}>\r\n    {props.children}\r\n   \t</div>\r\n   \t);\r\n}\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\trobots:[],\r\n\tsearchfield:''\r\n      }\r\n\t}\r\n  \r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response=> response.json())\r\n      .then(users => {this.setState({ robots: users})});\r\n  }\r\n\tonsearchchange=(event)=>{\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t}\r\n\t\r\n\trender(){ \r\n\t\tconst filter = this.state.robots.filter(robots=>{\r\n\t\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\t\tif(this.state.robots.length===0){\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t<h1 className='f1 tc'>Robofriends </h1>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t<h1 className='tc f1'>LOADING...</h1>\r\n\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t}\r\n\t\telse{\r\n\treturn(\r\n   \t<div className=\"tc\" >\r\n   \t<h1 className='f1'>Robofriends</h1>\r\n   \t<SearchBox searchchange={this.onsearchchange}/>\r\n   \t<Scroll>\r\n    <CardList  robots={filter}/>\r\n    </Scroll>\r\n    </div>\r\n   \t);}\r\n   }\r\n  \r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}